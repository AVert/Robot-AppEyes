{"name":"Robot-appeyes","tagline":"Robot Framework Visual Verification Test Library using Applitools Eyes","body":"Robot-AppEyes library for Robot Framework\r\n==================================================\r\n\r\n\r\nIntroduction\r\n------------\r\n\r\nRobot-AppEyes is a Robot Framework Library that uses the Python SDK [Eyes-Selenium](https://pypi.python.org/pypi/eyes-selenium) from the tool [Applitools Eyes](http://applitools.com/), providing visual verification that can be used with the [Selenium2Library](https://github.com/rtomac/robotframework-selenium2library).\r\n\r\nThe Robot-AppEyes library is the result of our initial proof of concept with the [Applitools Eyes](http://applitools.com/) tool to automate visual software testing. In order to use the Robot-AppEyes library, you are required to [sign up](https://applitools.com/sign-up/) for a free account with Applitools, further information around this can be found below in the [Usage](https://github.com/NaviNet/Robot-AppEyes#usage) section.\r\n\r\n- More information about the keywords in this library can be found on the [RobotAppEyesDoc](https://github.com/NaviNet/Robot-AppEyes/doc/RobotAppEyesDoc.html) page.\r\n- The [Eyes Selenium](https://pypi.python.org/pypi/eyes-selenium/1.15) page will provide more information for that library.\r\n- More information about the Selenium2library can be found on the [Selenium2Library Wiki](https://github.com/rtomac/robotframework-selenium2library/wiki) and in the [Keyword Documentation](http://rtomac.github.com/robotframework-selenium2library/doc/Selenium2Library.html).\r\n\r\nRequirements\r\n------------\r\n* Python 2.7.4 (Newer versions not tested)\r\n* Robot Framework 2.8.3 (Newer versions not tested)\r\n* Selenium2Library 1.5 (Newer versions not tested)\r\n* Eyes-Selenium 1.15 (Newer versions not tested). The downloads can be found [here](https://pypi.python.org/pypi/eyes-selenium/1.15) or pip install eyes-selenium can be used.\r\n\r\n\r\nInstallation\r\n------------\r\n#### Using pip ####\r\n\r\nThe recommended installation method is using\r\n[pip](http://pip-installer.org)\r\n\r\n    pip install Robot-AppEyes\r\n\r\nNotice that using ``--upgrade`` above updates both the library and all\r\nits dependencies to the latest version.\r\n    \r\n    pip install --upgrade Robot-AppEyes\r\n\r\nOr to install a specific version use:\r\n\r\n    pip install Robot-AppEyes==(DesiredVersion)\r\n\r\nTo uninstall Robot-AppEyes use the following pip command:\r\n  \r\n    pip uninstall Robot-AppEyes\r\n \r\n#### Manual installation ####\r\n\r\n A manual install requires first installing all the dependency libraries and then the Robot-Appeyes library manually\r\n\r\n1) Make sure you have [Robot Framework installed](http://code.google.com/p/robotframework/wiki/Installation)\r\n\r\n2) Download source distributions (``*.tar.gz`` / ``*.zip``) for the library and its\r\n   dependencies\r\n\r\n  Eyes-selenium dependencies\r\n\r\n   - [https://pypi.python.org/pypi/setuptools](https://pypi.python.org/pypi/setuptools)\r\n   - [https://pypi.python.org/pypi/requests](https://pypi.python.org/pypi/requests/2.2.1)\r\n   - [https://pypi.python.org/pypi/pypng](https://pypi.python.org/pypi/pypng/0.0.16)\r\n   - [https://pypi.python.org/pypi/selenium](https://pypi.python.org/pypi/selenium/2.39.0)\r\n\r\n  Robot-AppEyes and dependencies\r\n\r\n   - [https://pypi.python.org/pypi/Robot-AppEyes](https://pypi.python.org/pypi/Robot-AppEyes)\r\n   - [https://pypi.python.org/pypi/eyes-selenium](https://pypi.python.org/pypi/eyes-selenium/1.15)\r\n   - [https://pypi.python.org/pypi/robotframework-selenium2library](https://pypi.python.org/pypi/robotframework-selenium2library/1.5.0)\r\n\r\n3) Extract each source distribution to a temporary location using 7zip (or your preferred zip program).\r\n\r\n4) Open command line and go to each directory that was created from extraction and install each project using:\r\n\r\n       python setup.py install\r\n\r\nDirectory Layout\r\n----------------\r\n\r\n*RobotAppEyes/RobotAppEyes.py* :\r\n    The Robot Python Library that makes use of the Applitools Eyes Python SDK.\r\n\r\n*tests/acceptance/RobotAppEyesTest.txt* :\r\n    Example test file to display what various keywords from Robot-AppEyes Library accomplish\r\n\r\n*doc/RobotAppEyesDoc.html* :\r\n    Keyword documentation for the Robot-AppEyes library.\r\n\r\n\r\nUsage\r\n-----\r\n\r\nTo write tests with Robot Framework and Robot-AppEyes, \r\nRobotAppEyes must be imported into your Robot test suite.\r\nSee [Robot Framework User Guide](http://code.google.com/p/robotframework/wiki/UserGuide) for more information.\r\n\r\n\r\n**Important** - You have to create a [free account](https://applitools.com/sign-up/) with Applitools in order to run the \r\n            Robot-AppEyes library and return results. The Applitools site will\r\n            allow you to sign up and you will then be provide with your own API key.\r\n            This will then need to be added to the Robot test file RoboAppEyesTest.txt,\r\n            within the variable ${Applitools-Key}, remove 'YourApplitoolsKey' and replace with your API Key.\r\n\r\n\r\nRunning the Demo\r\n----------------\r\n\r\nThe test file RobotAppEyesTest.txt, is an easily executable test for Robot Framework using Robot-AppEyes Library. \r\nFor in depth detail on how the keywords function, read the Keyword documentation found in *doc/RobotAppEyesDoc.html*\r\n\r\n**Remember to include your Applitools API key otherwise the\r\ntest will not run.** To run the test navigate to the atests directory found in your C:\\Python folder. Open a command prompt within the *tests/acceptance* folder and run\r\n\r\n    pybot RobotAppEyesTest.txt\r\n\r\n**Note:** It is assumed that anyone who wants to use this demo script is already able to execute robot tests using Google Chrome.\r\n\r\n\r\nThings to Note When Using Applitools\r\n-----------------------------------\r\n\r\n* The RobotAppEyesTest.txt test will fail after the first run, this is because a baseline is being created and will be accepted automatically by Applitools Eyes. A second test run will show a successful comparison between screens and the test will pass.\r\n* Changing the ${Applitools-AppName} variable value will create a new test entry in Applitools test result screen and a new baseline will be accepted automatically by Applitools Eyes on the first run.\r\n* The Height resolution should not be greater than 1000, this is currently Applitools maximum setting.\r\n* Browser zoom should be set to 100%.\r\n\r\n\r\nGetting Help\r\n------------\r\nThe [user group for Robot Framework](http://groups.google.com/group/robotframework-users) is the best place to get help. Include in the post:\r\n\r\n- Full description of what you are trying to do and expected outcome\r\n- Version number of Robot-AppEyes, Robot Framework, and Selenium2Library\r\n- Traceback or other debug output containing error information","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}